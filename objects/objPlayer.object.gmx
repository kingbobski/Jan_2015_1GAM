<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,objGUI);
instance_create(0,0,objEnemyMaker);

friction = 1;

image_speed = 0.5;
background_hspeed[0] = -0.25;
CannonPosX = sprite_width;
CannonPosY = 30;

plySpeed = 1;
boost = 100;

global.Ammo = 60;
score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>plySpeed -= 0.10;
image_speed -= 0.15;
boost += 0.05;

//FPS debug

if(keyboard_check_pressed(vk_f1))
{
    room_speed = 30;
}
if(keyboard_check_pressed(vk_f2))
{
    room_speed = 60;
}

// KEYBOARD

if(keyboard_check(vk_up) || keyboard_check(ord('W')))
{
    motion_set(90,3);
}

if(keyboard_check(vk_down) || keyboard_check(ord('S')))
{
    motion_set(270,3);
}

if(keyboard_check(vk_right) || keyboard_check(ord('D')) &amp;&amp; boost &gt; 0)
{
    plySpeed += 0.25;
    boost -= 0.10;
}
if(keyboard_check(vk_left) || keyboard_check(ord('A')))
{
    plySpeed -= 0.25;
}

if(keyboard_check(vk_nokey))
{
    speed = 0;
}

// PLAYER SPEED
if(plySpeed &gt; 100)
{
    plySpeed = 100;
}
if(plySpeed &lt; 0)
{
    plySpeed = 0;
}

// BOOSTING
if(boost &lt; 0)
{
    boost = 0;
}
if(boost &gt; 100)
{
    boost = 100;
}

// HSPEED and anim
if(plySpeed &lt; 20)
{
    background_hspeed[0] = -0.25;
    image_speed = 0.50;
}
if(plySpeed &gt; 20)
{
    background_hspeed[0] = -0.50;
    image_speed = 0.75;
}
if(plySpeed &gt; 40)
{
    background_hspeed[0] = -0.75;
    image_speed = 1.00;    
}
if(plySpeed &gt; 60)
{
    background_hspeed[0] = -1.00;
    image_speed = 1.25;
}
if(plySpeed &gt; 80)
{
    background_hspeed[0] = -1.25;
    image_speed = 1.50;
}
if(plySpeed = 100)
{
    background_hspeed[0] = -1.50;
    image_speed = 1.75;
}

// Player Anim
if(image_speed &lt; 0.50)
{
    image_speed = 0.50;
}

if(image_speed &gt; 1.75)
{
    image_speed = 1.75;
}


// BULLETS
if(keyboard_check_pressed(vk_space) &amp;&amp; global.Ammo &gt; 0)
{ 
    bullet = instance_create(x + CannonPosX, y + CannonPosY,objBullet);
    global.Ammo -=1;
    bullet.direction = 0;
    bullet.speed = 8;   
}

// CONTROL AMMO COUNT
if(global.Ammo &gt; 100)
{
    global.Ammo = 100;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
